{"ast":null,"code":"const axios = require('axios');\n\nexport default class TweetService {\n  constructor() {\n    this.tweets = [{\n      id: 1,\n      text: '드림코딩에서 강의 들으면 너무 좋으다',\n      createdAt: '2021-05-09T04:20:57.000Z',\n      name: 'Bob',\n      username: 'bob',\n      url: 'https://widgetwhats.com/app/uploads/2019/11/free-profile-photo-whatsapp-1.png'\n    }];\n  }\n\n  async getTweets(username) {// return username\n    //   \\? this.tweets.filter((tweet) => tweet.username === username)\n    //   : this.tweets;\n    // username = await axios.get('http://localhost:8080/tweets')\n    // .then((res)=>console.log(res.data))\n    // .catch(((Error)=>console.log(Error)));\n    // console.log(username);\n    // return username;    \n  }\n\n  async postTweet(text) {\n    const tweet = {\n      id: Date.now(),\n      createdAt: new Date(),\n      name: 'Ellie',\n      username: 'ellie',\n      text\n    };\n    this.tweets.push(tweet);\n    return tweet;\n  }\n\n  async deleteTweet(tweetId) {\n    this.tweets = this.tweets.filter(tweet => tweet.id !== tweetId);\n  }\n\n  async updateTweet(tweetId, text) {\n    const tweet = this.tweets.find(tweet => tweet.id === tweetId);\n\n    if (!tweet) {\n      throw new Error('tweet not found!');\n    }\n\n    tweet.text = text;\n    return tweet;\n  }\n\n}","map":{"version":3,"sources":["/Users/seongjehun/Desktop/study/express/dreamCoding/backEndLecture/12.dwitter/client/src/service/tweet.js"],"names":["axios","require","TweetService","tweets","id","text","createdAt","name","username","url","getTweets","postTweet","tweet","Date","now","push","deleteTweet","tweetId","filter","updateTweet","find","Error"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,eAAe,MAAMC,YAAN,CAAmB;AAAA;AAAA,SAChCC,MADgC,GACvB,CACP;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,sBAFR;AAGEC,MAAAA,SAAS,EAAE,0BAHb;AAIEC,MAAAA,IAAI,EAAE,KAJR;AAKEC,MAAAA,QAAQ,EAAE,KALZ;AAMEC,MAAAA,GAAG,EAAE;AANP,KADO,CADuB;AAAA;;AAYjB,QAATC,SAAS,CAACF,QAAD,EAAW,CACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEc,QAATG,SAAS,CAACN,IAAD,EAAO;AACpB,UAAMO,KAAK,GAAG;AACZR,MAAAA,EAAE,EAAES,IAAI,CAACC,GAAL,EADQ;AAEZR,MAAAA,SAAS,EAAE,IAAIO,IAAJ,EAFC;AAGZN,MAAAA,IAAI,EAAE,OAHM;AAIZC,MAAAA,QAAQ,EAAE,OAJE;AAKZH,MAAAA;AALY,KAAd;AAOA,SAAKF,MAAL,CAAYY,IAAZ,CAAiBH,KAAjB;AACA,WAAOA,KAAP;AACD;;AAEgB,QAAXI,WAAW,CAACC,OAAD,EAAU;AACzB,SAAKd,MAAL,GAAc,KAAKA,MAAL,CAAYe,MAAZ,CAAoBN,KAAD,IAAWA,KAAK,CAACR,EAAN,KAAaa,OAA3C,CAAd;AACD;;AAEgB,QAAXE,WAAW,CAACF,OAAD,EAAUZ,IAAV,EAAgB;AAC/B,UAAMO,KAAK,GAAG,KAAKT,MAAL,CAAYiB,IAAZ,CAAkBR,KAAD,IAAWA,KAAK,CAACR,EAAN,KAAaa,OAAzC,CAAd;;AACA,QAAI,CAACL,KAAL,EAAY;AACV,YAAM,IAAIS,KAAJ,CAAU,kBAAV,CAAN;AACD;;AACDT,IAAAA,KAAK,CAACP,IAAN,GAAaA,IAAb;AACA,WAAOO,KAAP;AACD;;AA9C+B","sourcesContent":["const axios = require('axios');\n\nexport default class TweetService {\n  tweets = [\n    {\n      id: 1,\n      text: '드림코딩에서 강의 들으면 너무 좋으다',\n      createdAt: '2021-05-09T04:20:57.000Z',\n      name: 'Bob',\n      username: 'bob',\n      url: 'https://widgetwhats.com/app/uploads/2019/11/free-profile-photo-whatsapp-1.png',\n    },\n  ];\n\n  async getTweets(username) {\n    // return username\n    //   \\? this.tweets.filter((tweet) => tweet.username === username)\n    //   : this.tweets;\n    // username = await axios.get('http://localhost:8080/tweets')\n    // .then((res)=>console.log(res.data))\n    // .catch(((Error)=>console.log(Error)));\n    // console.log(username);\n    // return username;    \n  }\n\n  async postTweet(text) {\n    const tweet = {\n      id: Date.now(),\n      createdAt: new Date(),\n      name: 'Ellie',\n      username: 'ellie',\n      text,\n    };\n    this.tweets.push(tweet);\n    return tweet;\n  }\n\n  async deleteTweet(tweetId) {\n    this.tweets = this.tweets.filter((tweet) => tweet.id !== tweetId);\n  }\n\n  async updateTweet(tweetId, text) {\n    const tweet = this.tweets.find((tweet) => tweet.id === tweetId);\n    if (!tweet) {\n      throw new Error('tweet not found!');\n    }\n    tweet.text = text;\n    return tweet;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}